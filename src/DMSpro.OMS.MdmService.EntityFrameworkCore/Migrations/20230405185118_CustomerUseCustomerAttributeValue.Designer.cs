// <auto-generated />
using System;
using DMSpro.OMS.MdmService.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace DMSpro.OMS.MdmService.Migrations
{
    [DbContext(typeof(MdmServiceDbContext))]
    [Migration("20230405185118_CustomerUseCustomerAttributeValue")]
    partial class CustomerUseCustomerAttributeValue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DMSpro.OMS.MdmService.Companies.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Address");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ContactName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ContactName");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ContactPhone");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ERPCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ERPCode");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("GeoLevel0Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoLevel1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoLevel2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoLevel3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoLevel4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsHO")
                        .HasColumnType("bit")
                        .HasColumnName("IsHO");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Latitude")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Latitude");

                    b.Property<string>("License")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("License");

                    b.Property<string>("Longitude")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Phone");

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Street");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TaxCode");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("VATAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("VATAddress");

                    b.Property<string>("VATName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("VATName");

                    b.HasKey("Id");

                    b.HasIndex("GeoLevel0Id");

                    b.HasIndex("GeoLevel1Id");

                    b.HasIndex("GeoLevel2Id");

                    b.HasIndex("GeoLevel3Id");

                    b.HasIndex("GeoLevel4Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Companies", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CompanyIdentityUserAssignments.CompanyIdentityUserAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<bool>("CurrentlySelected")
                        .HasColumnType("bit")
                        .HasColumnName("CurrentlySelected");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("IdentityUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdentityUserId");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CompanyIdentityUserAssignments", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CompanyInZones.CompanyInZone", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid?>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("SalesOrgHierarchyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("SalesOrgHierarchyId");

                    b.ToTable("CompanyInZones", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Currencies.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Currencies", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CusAttributeValues.CusAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrValName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AttrValName");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerAttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("ParentCusAttributeValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerAttributeId");

                    b.HasIndex("ParentCusAttributeValueId");

                    b.ToTable("CusAttributeValues", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerAssignments.CustomerAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAssignments", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerAttachments.CustomerAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FileId");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAttachments", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrValName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AttrValName");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerAttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerAttributeId");

                    b.HasIndex("ParentId");

                    b.ToTable("CustomerAttributeValues", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerAttributes.CustomerAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("AttrName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AttrName");

                    b.Property<int>("AttrNo")
                        .HasMaxLength(19)
                        .HasColumnType("int")
                        .HasColumnName("AttrNo");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<int?>("HierarchyLevel")
                        .HasMaxLength(19)
                        .HasColumnType("int")
                        .HasColumnName("HierarchyLevel");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("CustomerAttributes", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerContacts.CustomerContact", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Address");

                    b.Property<string>("BankAccName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BankAccName");

                    b.Property<string>("BankAccNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BankAccNumber");

                    b.Property<string>("BankName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BankName");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateOfBirth");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FirstName");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("Gender");

                    b.Property<string>("IdentityNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IdentityNumber");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LastName");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Phone");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<int?>("Title")
                        .HasColumnType("int")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerContacts", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupAttributes.CustomerGroupAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr0Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr10Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr11Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr12Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr13Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr14Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr15Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr16Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr17Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr18Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr19Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr5Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr6Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr7Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr8Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr9Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("Attr0Id");

                    b.HasIndex("Attr10Id");

                    b.HasIndex("Attr11Id");

                    b.HasIndex("Attr12Id");

                    b.HasIndex("Attr13Id");

                    b.HasIndex("Attr14Id");

                    b.HasIndex("Attr15Id");

                    b.HasIndex("Attr16Id");

                    b.HasIndex("Attr17Id");

                    b.HasIndex("Attr18Id");

                    b.HasIndex("Attr19Id");

                    b.HasIndex("Attr1Id");

                    b.HasIndex("Attr2Id");

                    b.HasIndex("Attr3Id");

                    b.HasIndex("Attr4Id");

                    b.HasIndex("Attr5Id");

                    b.HasIndex("Attr6Id");

                    b.HasIndex("Attr7Id");

                    b.HasIndex("Attr8Id");

                    b.HasIndex("Attr9Id");

                    b.HasIndex("CustomerGroupId");

                    b.ToTable("CustomerGroupAttributes", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupByAtts.CustomerGroupByAtt", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CusAttributeValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("ValueCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ValueCode");

                    b.Property<string>("ValueName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ValueName");

                    b.HasKey("Id");

                    b.HasIndex("CusAttributeValueId");

                    b.HasIndex("CustomerGroupId");

                    b.ToTable("CustomerGroupByAtts", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupByGeos.CustomerGroupByGeo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("GeoMaster0Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerGroupId");

                    b.HasIndex("GeoMaster0Id");

                    b.HasIndex("GeoMaster1Id");

                    b.HasIndex("GeoMaster2Id");

                    b.HasIndex("GeoMaster3Id");

                    b.HasIndex("GeoMaster4Id");

                    b.ToTable("CustomerGroupByGeos", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupByLists.CustomerGroupByList", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerGroupId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerGroupByLists", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupGeos.CustomerGroupGeo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("GeoMaster0Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerGroupId");

                    b.HasIndex("GeoMaster0Id");

                    b.HasIndex("GeoMaster1Id");

                    b.HasIndex("GeoMaster2Id");

                    b.HasIndex("GeoMaster3Id");

                    b.HasIndex("GeoMaster4Id");

                    b.ToTable("CustomerGroupGeos", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupLists.CustomerGroupList", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerGroupId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerGroupLists", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroups.CustomerGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<int>("GroupBy")
                        .HasColumnType("int")
                        .HasColumnName("GroupBy");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("CustomerGroups", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerImages.CustomerImage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FileId");

                    b.Property<bool>("IsAvatar")
                        .HasColumnType("bit")
                        .HasColumnName("IsAvatar");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPOSM")
                        .HasColumnType("bit")
                        .HasColumnName("IsPOSM");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("POSMItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("POSMItemId");

                    b.ToTable("CustomerImages", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerInZones.CustomerInZone", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("SalesOrgHierarchyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesOrgHierarchyId");

                    b.ToTable("CustomerInZones", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Customers.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Address");

                    b.Property<Guid?>("Attr0Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr10Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr11Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr12Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr13Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr14Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr15Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr16Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr17Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr18Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr19Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr5Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr6Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr7Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr8Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr9Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<int?>("CreditLimit")
                        .HasColumnType("int")
                        .HasColumnName("CreditLimit");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("GeoMaster0Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCompany")
                        .HasColumnType("bit")
                        .HasColumnName("IsCompany");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime>("LastOrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastOrderDate");

                    b.Property<string>("Latitude")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Latitude");

                    b.Property<string>("License")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("License");

                    b.Property<Guid?>("LinkedCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Longitude")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Longitude");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PaymentTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone1");

                    b.Property<string>("Phone2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Phone2");

                    b.Property<Guid?>("PriceListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SFACustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SFACustomerCode");

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Street");

                    b.Property<string>("TaxCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TaxCode");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WarehouseId");

                    b.Property<string>("erpCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("erpCode");

                    b.Property<string>("vatAddress")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("vatAddress");

                    b.Property<string>("vatName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("vatName");

                    b.HasKey("Id");

                    b.HasIndex("Attr0Id");

                    b.HasIndex("Attr10Id");

                    b.HasIndex("Attr11Id");

                    b.HasIndex("Attr12Id");

                    b.HasIndex("Attr13Id");

                    b.HasIndex("Attr14Id");

                    b.HasIndex("Attr15Id");

                    b.HasIndex("Attr16Id");

                    b.HasIndex("Attr17Id");

                    b.HasIndex("Attr18Id");

                    b.HasIndex("Attr19Id");

                    b.HasIndex("Attr1Id");

                    b.HasIndex("Attr2Id");

                    b.HasIndex("Attr3Id");

                    b.HasIndex("Attr4Id");

                    b.HasIndex("Attr5Id");

                    b.HasIndex("Attr6Id");

                    b.HasIndex("Attr7Id");

                    b.HasIndex("Attr8Id");

                    b.HasIndex("Attr9Id");

                    b.HasIndex("GeoMaster0Id");

                    b.HasIndex("GeoMaster1Id");

                    b.HasIndex("GeoMaster2Id");

                    b.HasIndex("GeoMaster3Id");

                    b.HasIndex("GeoMaster4Id");

                    b.HasIndex("LinkedCompanyId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("PaymentTermId");

                    b.HasIndex("PriceListId");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.DimensionMeasurements.DimensionMeasurement", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("DimensionMeasurements", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.EmployeeAttachments.EmployeeAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<Guid>("EmployeeProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FileId");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeProfileId");

                    b.ToTable("EmployeeAttachments", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.EmployeeImages.EmployeeImage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<Guid>("EmployeeProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FileId");

                    b.Property<bool>("IsAvatar")
                        .HasColumnType("bit")
                        .HasColumnName("IsAvatar");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeProfileId");

                    b.ToTable("EmployeeImages", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.EmployeeProfiles.EmployeeProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Address");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateOfBirth");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ERPCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ERPCode");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<Guid?>("EmployeeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("FirstName");

                    b.Property<string>("IdCardNumber")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IdCardNumber");

                    b.Property<Guid?>("IdentityUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IdentityUserId");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("LastName");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Phone");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid?>("WorkingPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("WorkingPositionId");

                    b.ToTable("EmployeeProfiles", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ERPCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ERPCode");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("GeoMasters", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.HolidayDetails.HolidayDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("HolidayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("HolidayId");

                    b.ToTable("HolidayDetails", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Holidays.Holiday", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<int>("Year")
                        .HasMaxLength(2099)
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("Holidays", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemAttachments.ItemAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FileId");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemAttachments", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttrValName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("AttrValName");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("ItemAttributeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ItemAttributeId");

                    b.HasIndex("ParentId");

                    b.ToTable("ItemAttributeValues", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemAttributes.ItemAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("AttrName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AttrName");

                    b.Property<int>("AttrNo")
                        .HasMaxLength(19)
                        .HasColumnType("int")
                        .HasColumnName("AttrNo");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<int?>("HierarchyLevel")
                        .HasColumnType("int")
                        .HasColumnName("HierarchyLevel");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("ItemAttributes", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemGroupAttributes.ItemGroupAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr0Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr10Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr11Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr12Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr13Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr14Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr15Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr16Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr17Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr18Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr19Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr5Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr6Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr7Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr8Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr9Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("dummy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("dummy");

                    b.HasKey("Id");

                    b.HasIndex("Attr0Id");

                    b.HasIndex("Attr10Id");

                    b.HasIndex("Attr11Id");

                    b.HasIndex("Attr12Id");

                    b.HasIndex("Attr13Id");

                    b.HasIndex("Attr14Id");

                    b.HasIndex("Attr15Id");

                    b.HasIndex("Attr16Id");

                    b.HasIndex("Attr17Id");

                    b.HasIndex("Attr18Id");

                    b.HasIndex("Attr19Id");

                    b.HasIndex("Attr1Id");

                    b.HasIndex("Attr2Id");

                    b.HasIndex("Attr3Id");

                    b.HasIndex("Attr4Id");

                    b.HasIndex("Attr5Id");

                    b.HasIndex("Attr6Id");

                    b.HasIndex("Attr7Id");

                    b.HasIndex("Attr8Id");

                    b.HasIndex("Attr9Id");

                    b.HasIndex("ItemGroupId");

                    b.ToTable("ItemGroupAttributes", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemGroupLists.ItemGroupList", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("Price");

                    b.Property<int>("Rate")
                        .HasColumnType("int")
                        .HasColumnName("Rate");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("UomId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UomId");

                    b.ToTable("ItemGroupLists", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemGroups.ItemGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.ToTable("ItemGroups", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemImages.ItemImage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("DisplayOrder");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FileId");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemImages", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Items.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<Guid?>("Attr0Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr10Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr11Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr12Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr13Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr14Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr15Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr16Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr17Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr18Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr19Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr5Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr6Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr7Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr8Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Attr9Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Barcode");

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("BasePrice");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("bit")
                        .HasColumnName("CanUpdate");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int?>("ExpiredType")
                        .HasColumnType("int")
                        .HasColumnName("ExpiredType");

                    b.Property<int?>("ExpiredValue")
                        .HasColumnType("int")
                        .HasColumnName("ExpiredValue");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("InventoryUOMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsInventoriable")
                        .HasColumnType("bit")
                        .HasColumnName("IsInventoriable");

                    b.Property<bool>("IsPurchasable")
                        .HasColumnType("bit")
                        .HasColumnName("IsPurchasable");

                    b.Property<bool>("IsSaleable")
                        .HasColumnType("bit")
                        .HasColumnName("IsSaleable");

                    b.Property<int?>("IssueMethod")
                        .HasColumnType("int")
                        .HasColumnName("IssueMethod");

                    b.Property<Guid>("ItemTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("ManageItemBy")
                        .HasColumnType("int")
                        .HasColumnName("ManageItemBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<Guid>("PurUOMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PurUnitRate")
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("PurUnitRate");

                    b.Property<Guid>("SalesUOMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SalesUnitRate")
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("SalesUnitRate");

                    b.Property<string>("ShortName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ShortName");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("UomGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("erpCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("erpCode");

                    b.HasKey("Id");

                    b.HasIndex("Attr0Id");

                    b.HasIndex("Attr10Id");

                    b.HasIndex("Attr11Id");

                    b.HasIndex("Attr12Id");

                    b.HasIndex("Attr13Id");

                    b.HasIndex("Attr14Id");

                    b.HasIndex("Attr15Id");

                    b.HasIndex("Attr16Id");

                    b.HasIndex("Attr17Id");

                    b.HasIndex("Attr18Id");

                    b.HasIndex("Attr19Id");

                    b.HasIndex("Attr1Id");

                    b.HasIndex("Attr2Id");

                    b.HasIndex("Attr3Id");

                    b.HasIndex("Attr4Id");

                    b.HasIndex("Attr5Id");

                    b.HasIndex("Attr6Id");

                    b.HasIndex("Attr7Id");

                    b.HasIndex("Attr8Id");

                    b.HasIndex("Attr9Id");

                    b.HasIndex("InventoryUOMId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("PurUOMId");

                    b.HasIndex("SalesUOMId");

                    b.HasIndex("UomGroupId");

                    b.HasIndex("VatId");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.MCPDetails.MCPDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Distance")
                        .HasColumnType("int")
                        .HasColumnName("Distance");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("Friday")
                        .HasColumnType("bit")
                        .HasColumnName("Friday");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MCPHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Monday")
                        .HasColumnType("bit")
                        .HasColumnName("Monday");

                    b.Property<bool>("Saturday")
                        .HasColumnType("bit")
                        .HasColumnName("Saturday");

                    b.Property<bool>("Sunday")
                        .HasColumnType("bit")
                        .HasColumnName("Sunday");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<bool>("Thursday")
                        .HasColumnType("bit")
                        .HasColumnName("Thursday");

                    b.Property<bool>("Tuesday")
                        .HasColumnType("bit")
                        .HasColumnName("Tuesday");

                    b.Property<int>("VisitOrder")
                        .HasColumnType("int")
                        .HasColumnName("VisitOrder");

                    b.Property<bool>("Wednesday")
                        .HasColumnType("bit")
                        .HasColumnName("Wednesday");

                    b.Property<bool>("Week1")
                        .HasColumnType("bit")
                        .HasColumnName("Week1");

                    b.Property<bool>("Week2")
                        .HasColumnType("bit")
                        .HasColumnName("Week2");

                    b.Property<bool>("Week3")
                        .HasColumnType("bit")
                        .HasColumnName("Week3");

                    b.Property<bool>("Week4")
                        .HasColumnType("bit")
                        .HasColumnName("Week4");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MCPHeaderId");

                    b.ToTable("MCPDetails", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.MCPHeaders.MCPHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid?>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("RouteId");

                    b.ToTable("MCPHeaders", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.NumberingConfigDetails.NumberingConfigDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<int>("CurrentNumber")
                        .HasColumnType("int")
                        .HasColumnName("CurrentNumber");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("NumberingConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaddingZeroNumber")
                        .HasColumnType("int")
                        .HasColumnName("PaddingZeroNumber");

                    b.Property<string>("Prefix")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Prefix");

                    b.Property<string>("Suffix")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Suffix");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("NumberingConfigId");

                    b.ToTable("NumberingConfigDetails", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.NumberingConfigs.NumberingConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("PaddingZeroNumber")
                        .HasColumnType("int")
                        .HasColumnName("PaddingZeroNumber");

                    b.Property<string>("Prefix")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Prefix");

                    b.Property<string>("Suffix")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Suffix");

                    b.Property<Guid>("SystemDataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("SystemDataId");

                    b.ToTable("NumberingConfigs", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PriceListDetails.PriceListDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("BasedOnPrice")
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("BasedOnPrice");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("Price");

                    b.Property<Guid>("PriceListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("UOMId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PriceListId");

                    b.HasIndex("UOMId");

                    b.ToTable("PriceListDetails", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PriceLists.PriceList", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<int?>("ArithmeticFactor")
                        .HasColumnType("int")
                        .HasColumnName("ArithmeticFactor");

                    b.Property<int?>("ArithmeticFactorType")
                        .HasColumnType("int")
                        .HasColumnName("ArithmeticFactorType");

                    b.Property<int?>("ArithmeticOperation")
                        .HasColumnType("int")
                        .HasColumnName("ArithmeticOperation");

                    b.Property<Guid?>("BasePriceListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsBase")
                        .HasColumnType("bit")
                        .HasColumnName("IsBase");

                    b.Property<bool>("IsDefaultForCustomer")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefaultForCustomer");

                    b.Property<bool>("IsDefaultForVendor")
                        .HasColumnType("bit")
                        .HasColumnName("IsDefaultForVendor");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("bit")
                        .HasColumnName("IsReleased");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<DateTime?>("ReleasedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReleasedDate");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("BasePriceListId");

                    b.ToTable("PriceLists", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PriceUpdateDetails.PriceUpdateDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("NewPrice")
                        .HasColumnType("int")
                        .HasColumnName("NewPrice");

                    b.Property<int>("PriceBeforeUpdate")
                        .HasColumnType("int")
                        .HasColumnName("PriceBeforeUpdate");

                    b.Property<Guid>("PriceListDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PriceUpdateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("PriceListDetailId");

                    b.HasIndex("PriceUpdateId");

                    b.ToTable("PriceUpdateDetails", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PriceUpdates.PriceUpdate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("PriceListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<DateTime?>("UpdateStatusDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdateStatusDate");

                    b.HasKey("Id");

                    b.HasIndex("PriceListId");

                    b.ToTable("PriceUpdates", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PricelistAssignments.PricelistAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsReleased")
                        .HasColumnType("bit")
                        .HasColumnName("IsReleased");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("PriceListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ReleasedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ReleasedDate");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerGroupId");

                    b.HasIndex("PriceListId");

                    b.ToTable("PricelistAssignments", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.SalesOrgEmpAssignments.SalesOrgEmpAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EffectiveDate");

                    b.Property<Guid>("EmployeeProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HierarchyCode")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("HierarchyCode");

                    b.Property<bool>("IsBase")
                        .HasColumnType("bit")
                        .HasColumnName("IsBase");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("SalesOrgHierarchyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeProfileId");

                    b.HasIndex("SalesOrgHierarchyId");

                    b.ToTable("SalesOrgEmpAssignments", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.SalesOrgHeaders.SalesOrgHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("SalesOrgHeaders", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.SalesOrgHierarchies.SalesOrgHierarchy", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("DirectChildren")
                        .HasColumnType("int")
                        .HasColumnName("DirectChildren");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HierarchyCode")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("HierarchyCode");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsRoute")
                        .HasColumnType("bit")
                        .HasColumnName("IsRoute");

                    b.Property<bool>("IsSellingZone")
                        .HasColumnType("bit")
                        .HasColumnName("IsSellingZone");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Level")
                        .HasMaxLength(9)
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SalesOrgHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("SalesOrgHeaderId");

                    b.ToTable("SalesOrgHierarchies", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Streets.Street", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Streets", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.SystemConfigs.SystemConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<int>("ControlType")
                        .HasColumnType("int")
                        .HasColumnName("ControlType");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DataSource")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("DataSource");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DefaultValue");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<bool>("EditableByTenant")
                        .HasColumnType("bit")
                        .HasColumnName("EditableByTenant");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("SystemConfigs", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.SystemDatas.SystemData", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<string>("ValueCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("ValueCode");

                    b.Property<string>("ValueName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ValueName");

                    b.HasKey("Id");

                    b.ToTable("SystemDatas", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.UOMGroupDetails.UOMGroupDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<long>("AltQty")
                        .HasColumnType("bigint")
                        .HasColumnName("AltQty");

                    b.Property<Guid>("AltUOMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("BaseQty")
                        .HasColumnType("bigint")
                        .HasColumnName("BaseQty");

                    b.Property<Guid>("BaseUOMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<Guid>("UOMGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AltUOMId");

                    b.HasIndex("BaseUOMId");

                    b.HasIndex("UOMGroupId");

                    b.ToTable("UOMGroupDetails", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.UOMGroups.UOMGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("UOMGroups", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.UOMs.UOM", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("UOMs", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.VATs.VAT", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<long>("Rate")
                        .HasMaxLength(99999)
                        .HasColumnType("bigint")
                        .HasColumnName("Rate");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("VATs", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Vendors.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Address");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ERPCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ERPCode");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("GeoMaster0Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster1Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster2Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster3Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GeoMaster4Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Latitude")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Latitude");

                    b.Property<Guid?>("LinkedCompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Longitude")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name");

                    b.Property<string>("Phone1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Phone1");

                    b.Property<string>("Phone2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Phone2");

                    b.Property<Guid>("PriceListId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ShortName");

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Street");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("GeoMaster0Id");

                    b.HasIndex("GeoMaster1Id");

                    b.HasIndex("GeoMaster2Id");

                    b.HasIndex("GeoMaster3Id");

                    b.HasIndex("GeoMaster4Id");

                    b.HasIndex("LinkedCompanyId");

                    b.HasIndex("PriceListId");

                    b.ToTable("Vendors", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.VisitPlans.VisitPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateVisit")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateVisit");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int")
                        .HasColumnName("DayOfWeek");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Distance")
                        .HasColumnType("int")
                        .HasColumnName("Distance");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsCommando")
                        .HasColumnType("bit")
                        .HasColumnName("IsCommando");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<Guid?>("ItemGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("MCPDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("Month");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<int>("VisitOrder")
                        .HasColumnType("int")
                        .HasColumnName("VisitOrder");

                    b.Property<int>("Week")
                        .HasColumnType("int")
                        .HasColumnName("Week");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("MCPDetailId");

                    b.HasIndex("RouteId");

                    b.ToTable("VisitPlans", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.WeightMeasurements.WeightMeasurement", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(19,2)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("WeightMeasurements", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.WorkingPositions.WorkingPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("WorkingPositions", (string)null);
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Companies.Company", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoLevel0")
                        .WithMany()
                        .HasForeignKey("GeoLevel0Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoLevel1")
                        .WithMany()
                        .HasForeignKey("GeoLevel1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoLevel2")
                        .WithMany()
                        .HasForeignKey("GeoLevel2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoLevel3")
                        .WithMany()
                        .HasForeignKey("GeoLevel3Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoLevel4")
                        .WithMany()
                        .HasForeignKey("GeoLevel4Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.Companies.Company", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("GeoLevel0");

                    b.Navigation("GeoLevel1");

                    b.Navigation("GeoLevel2");

                    b.Navigation("GeoLevel3");

                    b.Navigation("GeoLevel4");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CompanyIdentityUserAssignments.CompanyIdentityUserAssignment", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Companies.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CompanyInZones.CompanyInZone", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.ItemGroups.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.SalesOrgHierarchies.SalesOrgHierarchy", "SalesOrgHierarchy")
                        .WithMany()
                        .HasForeignKey("SalesOrgHierarchyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("ItemGroup");

                    b.Navigation("SalesOrgHierarchy");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CusAttributeValues.CusAttributeValue", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributes.CustomerAttribute", "CustomerAttribute")
                        .WithMany()
                        .HasForeignKey("CustomerAttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.CusAttributeValues.CusAttributeValue", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentCusAttributeValueId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CustomerAttribute");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerAssignments.CustomerAssignment", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerAttachments.CustomerAttachment", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributes.CustomerAttribute", "CustomerAttribute")
                        .WithMany()
                        .HasForeignKey("CustomerAttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CustomerAttribute");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerContacts.CustomerContact", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupAttributes.CustomerGroupAttribute", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr0")
                        .WithMany()
                        .HasForeignKey("Attr0Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr10")
                        .WithMany()
                        .HasForeignKey("Attr10Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr11")
                        .WithMany()
                        .HasForeignKey("Attr11Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr12")
                        .WithMany()
                        .HasForeignKey("Attr12Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr13")
                        .WithMany()
                        .HasForeignKey("Attr13Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr14")
                        .WithMany()
                        .HasForeignKey("Attr14Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr15")
                        .WithMany()
                        .HasForeignKey("Attr15Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr16")
                        .WithMany()
                        .HasForeignKey("Attr16Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr17")
                        .WithMany()
                        .HasForeignKey("Attr17Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr18")
                        .WithMany()
                        .HasForeignKey("Attr18Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr19")
                        .WithMany()
                        .HasForeignKey("Attr19Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr1")
                        .WithMany()
                        .HasForeignKey("Attr1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr2")
                        .WithMany()
                        .HasForeignKey("Attr2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr3")
                        .WithMany()
                        .HasForeignKey("Attr3Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr4")
                        .WithMany()
                        .HasForeignKey("Attr4Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr5")
                        .WithMany()
                        .HasForeignKey("Attr5Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr6")
                        .WithMany()
                        .HasForeignKey("Attr6Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr7")
                        .WithMany()
                        .HasForeignKey("Attr7Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr8")
                        .WithMany()
                        .HasForeignKey("Attr8Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", "Attr9")
                        .WithMany()
                        .HasForeignKey("Attr9Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerGroups.CustomerGroup", "CustomerGroup")
                        .WithMany()
                        .HasForeignKey("CustomerGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attr0");

                    b.Navigation("Attr1");

                    b.Navigation("Attr10");

                    b.Navigation("Attr11");

                    b.Navigation("Attr12");

                    b.Navigation("Attr13");

                    b.Navigation("Attr14");

                    b.Navigation("Attr15");

                    b.Navigation("Attr16");

                    b.Navigation("Attr17");

                    b.Navigation("Attr18");

                    b.Navigation("Attr19");

                    b.Navigation("Attr2");

                    b.Navigation("Attr3");

                    b.Navigation("Attr4");

                    b.Navigation("Attr5");

                    b.Navigation("Attr6");

                    b.Navigation("Attr7");

                    b.Navigation("Attr8");

                    b.Navigation("Attr9");

                    b.Navigation("CustomerGroup");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupByAtts.CustomerGroupByAtt", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CusAttributeValues.CusAttributeValue", "CusAttributeValue")
                        .WithMany()
                        .HasForeignKey("CusAttributeValueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.CustomerGroups.CustomerGroup", "CustomerGroup")
                        .WithMany()
                        .HasForeignKey("CustomerGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CusAttributeValue");

                    b.Navigation("CustomerGroup");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupByGeos.CustomerGroupByGeo", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CustomerGroups.CustomerGroup", "CustomerGroup")
                        .WithMany()
                        .HasForeignKey("CustomerGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster0")
                        .WithMany()
                        .HasForeignKey("GeoMaster0Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster1")
                        .WithMany()
                        .HasForeignKey("GeoMaster1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster2")
                        .WithMany()
                        .HasForeignKey("GeoMaster2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster3")
                        .WithMany()
                        .HasForeignKey("GeoMaster3Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster4")
                        .WithMany()
                        .HasForeignKey("GeoMaster4Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CustomerGroup");

                    b.Navigation("GeoMaster0");

                    b.Navigation("GeoMaster1");

                    b.Navigation("GeoMaster2");

                    b.Navigation("GeoMaster3");

                    b.Navigation("GeoMaster4");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupByLists.CustomerGroupByList", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CustomerGroups.CustomerGroup", "CustomerGroup")
                        .WithMany()
                        .HasForeignKey("CustomerGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("CustomerGroup");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupGeos.CustomerGroupGeo", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CustomerGroups.CustomerGroup", "CustomerGroup")
                        .WithMany()
                        .HasForeignKey("CustomerGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster0")
                        .WithMany()
                        .HasForeignKey("GeoMaster0Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster1")
                        .WithMany()
                        .HasForeignKey("GeoMaster1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster2")
                        .WithMany()
                        .HasForeignKey("GeoMaster2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster3")
                        .WithMany()
                        .HasForeignKey("GeoMaster3Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster4")
                        .WithMany()
                        .HasForeignKey("GeoMaster4Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CustomerGroup");

                    b.Navigation("GeoMaster0");

                    b.Navigation("GeoMaster1");

                    b.Navigation("GeoMaster2");

                    b.Navigation("GeoMaster3");

                    b.Navigation("GeoMaster4");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerGroupLists.CustomerGroupList", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CustomerGroups.CustomerGroup", "CustomerGroup")
                        .WithMany()
                        .HasForeignKey("CustomerGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("CustomerGroup");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerImages.CustomerImage", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.Items.Item", "ItemPOSM")
                        .WithMany()
                        .HasForeignKey("POSMItemId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Customer");

                    b.Navigation("ItemPOSM");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.CustomerInZones.CustomerInZone", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.SalesOrgHierarchies.SalesOrgHierarchy", "SalesOrgHierarchy")
                        .WithMany()
                        .HasForeignKey("SalesOrgHierarchyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("SalesOrgHierarchy");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Customers.Customer", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr0Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr10Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr11Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr12Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr13Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr14Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr15Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr16Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr17Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr18Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr19Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr3Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr4Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr5Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr6Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr7Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr8Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.CustomerAttributeValues.CustomerAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr9Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster0")
                        .WithMany()
                        .HasForeignKey("GeoMaster0Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster1")
                        .WithMany()
                        .HasForeignKey("GeoMaster1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster2")
                        .WithMany()
                        .HasForeignKey("GeoMaster2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster3")
                        .WithMany()
                        .HasForeignKey("GeoMaster3Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster4")
                        .WithMany()
                        .HasForeignKey("GeoMaster4Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.Companies.Company", null)
                        .WithMany()
                        .HasForeignKey("LinkedCompanyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.SystemDatas.SystemData", null)
                        .WithMany()
                        .HasForeignKey("PaymentTermId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.PriceLists.PriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("GeoMaster0");

                    b.Navigation("GeoMaster1");

                    b.Navigation("GeoMaster2");

                    b.Navigation("GeoMaster3");

                    b.Navigation("GeoMaster4");

                    b.Navigation("PriceList");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.EmployeeAttachments.EmployeeAttachment", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.EmployeeProfiles.EmployeeProfile", "EmployeeProfile")
                        .WithMany()
                        .HasForeignKey("EmployeeProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EmployeeProfile");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.EmployeeImages.EmployeeImage", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.EmployeeProfiles.EmployeeProfile", "EmployeeProfile")
                        .WithMany()
                        .HasForeignKey("EmployeeProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EmployeeProfile");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.EmployeeProfiles.EmployeeProfile", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.SystemDatas.SystemData", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.WorkingPositions.WorkingPosition", "WorkingPosition")
                        .WithMany()
                        .HasForeignKey("WorkingPositionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("EmployeeType");

                    b.Navigation("WorkingPosition");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.HolidayDetails.HolidayDetail", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Holidays.Holiday", "Holiday")
                        .WithMany()
                        .HasForeignKey("HolidayId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Holiday");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemAttachments.ItemAttachment", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Items.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributes.ItemAttribute", "ItemAttribute")
                        .WithMany()
                        .HasForeignKey("ItemAttributeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ItemAttribute");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemGroupAttributes.ItemGroupAttribute", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr0Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr10Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr11Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr12Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr13Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr14Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr15Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr16Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr17Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr18Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr19Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr3Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr4Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr5Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr6Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr7Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr8Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr9Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemGroups.ItemGroup", null)
                        .WithMany()
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemGroupLists.ItemGroupList", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.ItemGroups.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.Items.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.UOMs.UOM", "UOM")
                        .WithMany()
                        .HasForeignKey("UomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemGroup");

                    b.Navigation("UOM");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.ItemImages.ItemImage", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Items.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Items.Item", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr0Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr10Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr11Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr12Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr13Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr14Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr15Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr16Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr17Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr18Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr19Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr3Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr4Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr5Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr6Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr7Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr8Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.ItemAttributeValues.ItemAttributeValue", null)
                        .WithMany()
                        .HasForeignKey("Attr9Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.UOMs.UOM", "InventoryUOM")
                        .WithMany()
                        .HasForeignKey("InventoryUOMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.SystemDatas.SystemData", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.UOMs.UOM", "PurUOM")
                        .WithMany()
                        .HasForeignKey("PurUOMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.UOMs.UOM", "SalesUOM")
                        .WithMany()
                        .HasForeignKey("SalesUOMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.UOMGroups.UOMGroup", "UOMGroup")
                        .WithMany()
                        .HasForeignKey("UomGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.VATs.VAT", "VAT")
                        .WithMany()
                        .HasForeignKey("VatId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InventoryUOM");

                    b.Navigation("ItemType");

                    b.Navigation("PurUOM");

                    b.Navigation("SalesUOM");

                    b.Navigation("UOMGroup");

                    b.Navigation("VAT");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.MCPDetails.MCPDetail", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.MCPHeaders.MCPHeader", "MCPHeader")
                        .WithMany()
                        .HasForeignKey("MCPHeaderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("MCPHeader");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.MCPHeaders.MCPHeader", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.ItemGroups.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.SalesOrgHierarchies.SalesOrgHierarchy", "SalesOrgHierarchy")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("ItemGroup");

                    b.Navigation("SalesOrgHierarchy");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.NumberingConfigDetails.NumberingConfigDetail", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.NumberingConfigs.NumberingConfig", "NumberingConfig")
                        .WithMany()
                        .HasForeignKey("NumberingConfigId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("NumberingConfig");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.NumberingConfigs.NumberingConfig", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.SystemDatas.SystemData", "SystemData")
                        .WithMany()
                        .HasForeignKey("SystemDataId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SystemData");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PriceListDetails.PriceListDetail", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Items.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.PriceLists.PriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.UOMs.UOM", "UOM")
                        .WithMany()
                        .HasForeignKey("UOMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PriceList");

                    b.Navigation("UOM");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PriceLists.PriceList", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.PriceLists.PriceList", "BasePriceList")
                        .WithMany()
                        .HasForeignKey("BasePriceListId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("BasePriceList");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PriceUpdateDetails.PriceUpdateDetail", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.PriceListDetails.PriceListDetail", "PriceListDetail")
                        .WithMany()
                        .HasForeignKey("PriceListDetailId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.PriceUpdates.PriceUpdate", "PriceUpdate")
                        .WithMany()
                        .HasForeignKey("PriceUpdateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PriceListDetail");

                    b.Navigation("PriceUpdate");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PriceUpdates.PriceUpdate", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.PriceLists.PriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PriceList");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.PricelistAssignments.PricelistAssignment", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.CustomerGroups.CustomerGroup", "CustomerGroup")
                        .WithMany()
                        .HasForeignKey("CustomerGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.PriceLists.PriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CustomerGroup");

                    b.Navigation("PriceList");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.SalesOrgEmpAssignments.SalesOrgEmpAssignment", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.EmployeeProfiles.EmployeeProfile", "EmployeeProfile")
                        .WithMany()
                        .HasForeignKey("EmployeeProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.SalesOrgHierarchies.SalesOrgHierarchy", "SalesOrgHierarchy")
                        .WithMany()
                        .HasForeignKey("SalesOrgHierarchyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EmployeeProfile");

                    b.Navigation("SalesOrgHierarchy");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.SalesOrgHierarchies.SalesOrgHierarchy", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.SalesOrgHierarchies.SalesOrgHierarchy", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.SalesOrgHeaders.SalesOrgHeader", "SalesOrgHeader")
                        .WithMany()
                        .HasForeignKey("SalesOrgHeaderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("SalesOrgHeader");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.UOMGroupDetails.UOMGroupDetail", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.UOMs.UOM", "AltUOM")
                        .WithMany()
                        .HasForeignKey("AltUOMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.UOMs.UOM", "BaseUOM")
                        .WithMany()
                        .HasForeignKey("BaseUOMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.UOMGroups.UOMGroup", "UOMGroup")
                        .WithMany("Details")
                        .HasForeignKey("UOMGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AltUOM");

                    b.Navigation("BaseUOM");

                    b.Navigation("UOMGroup");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.Vendors.Vendor", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Companies.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster0")
                        .WithMany()
                        .HasForeignKey("GeoMaster0Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster1")
                        .WithMany()
                        .HasForeignKey("GeoMaster1Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster2")
                        .WithMany()
                        .HasForeignKey("GeoMaster2Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster3")
                        .WithMany()
                        .HasForeignKey("GeoMaster3Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.GeoMasters.GeoMaster", "GeoMaster4")
                        .WithMany()
                        .HasForeignKey("GeoMaster4Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.Companies.Company", "LinkedCompany")
                        .WithMany()
                        .HasForeignKey("LinkedCompanyId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.PriceLists.PriceList", "PriceList")
                        .WithMany()
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("GeoMaster0");

                    b.Navigation("GeoMaster1");

                    b.Navigation("GeoMaster2");

                    b.Navigation("GeoMaster3");

                    b.Navigation("GeoMaster4");

                    b.Navigation("LinkedCompany");

                    b.Navigation("PriceList");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.VisitPlans.VisitPlan", b =>
                {
                    b.HasOne("DMSpro.OMS.MdmService.Customers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.ItemGroups.ItemGroup", "ItemGroup")
                        .WithMany()
                        .HasForeignKey("ItemGroupId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DMSpro.OMS.MdmService.MCPDetails.MCPDetail", "MCPDetail")
                        .WithMany()
                        .HasForeignKey("MCPDetailId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DMSpro.OMS.MdmService.SalesOrgHierarchies.SalesOrgHierarchy", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ItemGroup");

                    b.Navigation("MCPDetail");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("DMSpro.OMS.MdmService.UOMGroups.UOMGroup", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
